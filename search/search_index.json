{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Kotlin PEG parser with Kotlin DSL ! The project is inspired by the pest parser and the kotlin-peg-dsl project . Simple example \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 val num = Symbol . rule < Int > ( name = \"Num\" , ignoreWS = false ) { seq { val sign = + char ( '+' , '-' ). orDefault ( '+' ) val digits = + DIGIT . oneOrMore (). joinToString () value { ( sign . get + digits . get ). toInt () } } } val sum = Symbol . rule < Int > ( name = \"Sum\" ) { num . list ( separator = char ( '+' ), min = 1 u ). mapPe { it . sum () } } fun evalExpr ( expression : String ) = PegParser . parse ( symbol = sum . value (), expression ). getOrElse { null } val results = listOf ( evalExpr ( \"1\" ), // 1 evalExpr ( \"+1\" ), // 1 evalExpr ( \"+ 1\" ), // null evalExpr ( \"+1 +\" ), // null evalExpr ( \"-17\" ), // -17 evalExpr ( \"-1 7\" ), // null evalExpr ( \"1+2+3+4+5\" ), // 15 evalExpr ( \"1 + +2 + -3 + +4 + 5\" ), // 9 evalExpr ( \"definitely not expression\" ), // null evalExpr ( \"\" ), // null ) for ( res in results ) { println ( res ) } Resources \u2693\ufe0e Documentation Examples Simple calculator Json parser About PEG PEG formal description Other useful papers Things to improve before stable : \u2693\ufe0e add more docs add more tests, improve the code coverage add more built-in characters add ability to define Comment parsing expression better error messages and error handling support left recursion provide more examples multiplatform Suggestions are welcome!","title":"Home"},{"location":"#simple-example","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 val num = Symbol . rule < Int > ( name = \"Num\" , ignoreWS = false ) { seq { val sign = + char ( '+' , '-' ). orDefault ( '+' ) val digits = + DIGIT . oneOrMore (). joinToString () value { ( sign . get + digits . get ). toInt () } } } val sum = Symbol . rule < Int > ( name = \"Sum\" ) { num . list ( separator = char ( '+' ), min = 1 u ). mapPe { it . sum () } } fun evalExpr ( expression : String ) = PegParser . parse ( symbol = sum . value (), expression ). getOrElse { null } val results = listOf ( evalExpr ( \"1\" ), // 1 evalExpr ( \"+1\" ), // 1 evalExpr ( \"+ 1\" ), // null evalExpr ( \"+1 +\" ), // null evalExpr ( \"-17\" ), // -17 evalExpr ( \"-1 7\" ), // null evalExpr ( \"1+2+3+4+5\" ), // 15 evalExpr ( \"1 + +2 + -3 + +4 + 5\" ), // 9 evalExpr ( \"definitely not expression\" ), // null evalExpr ( \"\" ), // null ) for ( res in results ) { println ( res ) }","title":"Simple example"},{"location":"#resources","text":"Documentation Examples Simple calculator Json parser About PEG PEG formal description Other useful papers","title":"Resources"},{"location":"#things-to-improve-before-stable","text":"add more docs add more tests, improve the code coverage add more built-in characters add ability to define Comment parsing expression better error messages and error handling support left recursion provide more examples multiplatform Suggestions are welcome!","title":"Things to improve before stable:"},{"location":"pages/installation-guide/","text":"Installation guide \u2693\ufe0e Gradle \u2693\ufe0e Use Maven Central repository: 1 2 3 repositories { mavenCentral () } Kotlin DSL 1 2 3 dependencies { implementation ( \"io.kpeg:kpeg:0.1.0\" ) } Groovy DSL 1 2 3 dependencies { implementation 'io.kpeg:kpeg:0.1.0' } Maven \u2693\ufe0e 1 2 3 4 5 <dependency> <groupId> io.kpeg </groupId> <artifactId> kpeg </artifactId> <version> 0.1.0 </version> </dependency>","title":"Installation guide"},{"location":"pages/installation-guide/#installation-guide","text":"","title":"Installation guide"},{"location":"pages/installation-guide/#gradle","text":"Use Maven Central repository: 1 2 3 repositories { mavenCentral () } Kotlin DSL 1 2 3 dependencies { implementation ( \"io.kpeg:kpeg:0.1.0\" ) } Groovy DSL 1 2 3 dependencies { implementation 'io.kpeg:kpeg:0.1.0' }","title":"Gradle"},{"location":"pages/installation-guide/#maven","text":"1 2 3 4 5 <dependency> <groupId> io.kpeg </groupId> <artifactId> kpeg </artifactId> <version> 0.1.0 </version> </dependency>","title":"Maven"},{"location":"pages/user-guide/","text":"User guide \u2693\ufe0e Docs are under development.","title":"User guide"},{"location":"pages/user-guide/#user-guide","text":"Docs are under development.","title":"User guide"},{"location":"pages/examples/json/","text":"Json parser \u2693\ufe0e Docs are under development. Source: https://github.com/AzimMuradov/kpeg/tree/master/examples/json","title":"Json parser"},{"location":"pages/examples/json/#json-parser","text":"Docs are under development. Source: https://github.com/AzimMuradov/kpeg/tree/master/examples/json","title":"Json parser"},{"location":"pages/examples/simple-calc/","text":"Simple calculator \u2693\ufe0e Docs are under development. Source: https://github.com/AzimMuradov/kpeg/tree/master/examples/simple-calc","title":"Simple calculator"},{"location":"pages/examples/simple-calc/#simple-calculator","text":"Docs are under development. Source: https://github.com/AzimMuradov/kpeg/tree/master/examples/simple-calc","title":"Simple calculator"}]}